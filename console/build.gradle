plugins {
	id "java"
	id "org.springframework.boot" version "3.4.1"
	id "io.spring.dependency-management" version "1.1.7"
	id "org.hibernate.orm" version "6.6.4.Final"
	id "org.graalvm.buildtools.native" version "0.10.4"
  id "net.ltgt.errorprone" version "4.1.0"
  id "com.diffplug.spotless" version "7.0.1"
  id "com.github.spotbugs" version "6.1.0"
  id 'pmd'
}

group = "com.momoino"
version = "0.0.1-SNAPSHOT"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation("org.springframework.boot:spring-boot-starter-web")
	{
		exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
	}
	implementation "org.springframework.boot:spring-boot-starter-jetty"
  implementation "org.jspecify:jspecify:1.0.0"
	compileOnly "org.projectlombok:lombok:1.18.36"
	developmentOnly "org.springframework.boot:spring-boot-devtools"
	runtimeOnly "org.postgresql:postgresql:42.7.5"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor "org.projectlombok:lombok:1.18.36"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher:1.11.4"
  errorprone("com.uber.nullaway:nullaway:0.12.3")
  errorprone "com.google.errorprone:error_prone_core:2.36.0"
}

hibernate {
	enhancement {
		enableAssociationManagement = true
	}
}

tasks.named("test") {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
  options.errorprone {
    option("NullAway:AnnotatedPackages", "com.momoino")
  }
}

tasks.named("compileJava") {
  options.errorprone.error("NullAway")
}

spotless {
  java {
    target 'src/*/java/**/*.java'

    removeUnusedImports()
    importOrder()

    // Cleanthat will refactor your code, but it may break your style: apply it before your formatter
    cleanthat()

    palantirJavaFormat("2.50.0")
    formatAnnotations()
  }
}

spotbugs {
  onlyAnalyze = [ "com.momoino.*" ]
}

pmd {
  toolVersion = "7.9.0"
  consoleOutput = true
  sourceSets = [sourceSets.main]
  ruleSetFiles "config/pmd-ruleset.xml"
}
